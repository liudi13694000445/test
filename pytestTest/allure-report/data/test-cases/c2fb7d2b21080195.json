{"uid":"c2fb7d2b21080195","name":"test_02_anchorFind","fullName":"case.test_find#test_02_anchorFind","historyId":"77eb3677cbeeaabd496137e88a982d7c","time":{"start":1672148677416,"stop":1672148679024,"duration":1608},"status":"broken","statusMessage":"pymysql.err.ProgrammingError: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 1\")","statusTrace":"def test_02_anchorFind():\n        uids = []\n        u = \"http://live.test.hualiantv.com/publicRoomV2/RecommendAnchor/\"\n        p = {\"token\": anchor_readToken()}\n        res = requests.get(url=u, params=p)\n        res_json = json.dumps(json.loads(res.text), indent=4, ensure_ascii=False)\n        a = json.loads(res.text)\n        print(a[\"data\"])\n        if len(a[\"data\"]) != 0:\n            b = json.loads(res.text)[\"data\"][\"list\"]\n            for c in b:\n                uids.append(c[\"uid\"])\n            print(uids)\n            sql_ssh = \"SELECT * from user_destroy_ub_bak where uid in %s\" % str(tuple(uids))\n>           assert len(SSH_select(sql_ssh)) == 0\n\ncase/test_find.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/dbtools.py:47: in SSH_select\n    cursor.execute(sql_ssh)\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pymysql/cursors.py:148: in execute\n    result = self._query(query)\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pymysql/cursors.py:310: in _query\n    conn.query(q)\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pymysql/connections.py:548: in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pymysql/connections.py:775: in _read_query_result\n    result.read()\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pymysql/connections.py:1156: in read\n    first_packet = self.connection._read_packet()\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pymysql/connections.py:725: in _read_packet\n    packet.raise_for_error()\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pymysql/protocol.py:221: in raise_for_error\n    err.raise_mysql_exception(self._data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata = b\"\\xff(\\x04#42000You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 1\"\n\n    def raise_mysql_exception(data):\n        errno = struct.unpack(\"<h\", data[1:3])[0]\n        errval = data[9:].decode(\"utf-8\", \"replace\")\n        errorclass = error_map.get(errno)\n        if errorclass is None:\n            errorclass = InternalError if errno < 1000 else OperationalError\n>       raise errorclass(errno, errval)\nE       pymysql.err.ProgrammingError: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 1\")\n\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pymysql/err.py:143: ProgrammingError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"pymysql.err.ProgrammingError: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 1\")","statusTrace":"def test_02_anchorFind():\n        uids = []\n        u = \"http://live.test.hualiantv.com/publicRoomV2/RecommendAnchor/\"\n        p = {\"token\": anchor_readToken()}\n        res = requests.get(url=u, params=p)\n        res_json = json.dumps(json.loads(res.text), indent=4, ensure_ascii=False)\n        a = json.loads(res.text)\n        print(a[\"data\"])\n        if len(a[\"data\"]) != 0:\n            b = json.loads(res.text)[\"data\"][\"list\"]\n            for c in b:\n                uids.append(c[\"uid\"])\n            print(uids)\n            sql_ssh = \"SELECT * from user_destroy_ub_bak where uid in %s\" % str(tuple(uids))\n>           assert len(SSH_select(sql_ssh)) == 0\n\ncase/test_find.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/dbtools.py:47: in SSH_select\n    cursor.execute(sql_ssh)\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pymysql/cursors.py:148: in execute\n    result = self._query(query)\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pymysql/cursors.py:310: in _query\n    conn.query(q)\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pymysql/connections.py:548: in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pymysql/connections.py:775: in _read_query_result\n    result.read()\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pymysql/connections.py:1156: in read\n    first_packet = self.connection._read_packet()\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pymysql/connections.py:725: in _read_packet\n    packet.raise_for_error()\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pymysql/protocol.py:221: in raise_for_error\n    err.raise_mysql_exception(self._data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata = b\"\\xff(\\x04#42000You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 1\"\n\n    def raise_mysql_exception(data):\n        errno = struct.unpack(\"<h\", data[1:3])[0]\n        errval = data[9:].decode(\"utf-8\", \"replace\")\n        errorclass = error_map.get(errno)\n        if errorclass is None:\n            errorclass = InternalError if errno < 1000 else OperationalError\n>       raise errorclass(errno, errval)\nE       pymysql.err.ProgrammingError: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 1\")\n\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pymysql/err.py:143: ProgrammingError","steps":[],"attachments":[{"uid":"6f5cb8b261998454","name":"stdout","source":"6f5cb8b261998454.txt","type":"text/plain","size":364}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"case"},{"name":"suite","value":"test_find"},{"name":"host","value":"huajiaodeMacBook-Pro.local"},{"name":"thread","value":"10032-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"case.test_find"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"c2fb7d2b21080195.json","parameterValues":[]}